#! /usr/bin/env bash

#
# Licence: MIT
# Contact: Karel Brinda (karel.brinda@gmail.com)
#

set -e
set -o pipefail
set -u
#set -f

readonly PROGNAME=$(basename $0)
readonly PROGDIR=$(dirname $0)
readonly -a ARGS=("$@")
readonly NARGS="$#"

C='\033[0;33m'
NC='\033[0m'

msg() {
	set +x
	echo
	echo -e "${C}=================================================${NC}"
	echo -e "${C}$@${NC}"
	echo -e "${C}=================================================${NC}"
	echo
	set -x
}

if [[ $NARGS -ne 2 ]]; then
	>&2 echo "usage: $PROGNAME protected.docx unprotected.docx"
	exit 1
fi

x="$1"
y="$2"
d=$(mktemp -d)
#d="./tmp"

set -x
msg "||           $PROGNAME                 ||"
msg "Step 1: creating a tmp dir:\n        \"$d\""

cp "$x" "$d/a.docx"

(
	cd "$d"
	mkdir a
	msg "Step 2: unzipping the content of \"$x\" into\n        \"$d/a\""
	unzip -d a a.docx


	fdoc="a/word/document.xml"
	frel="a/word/_rels/document.xml.rels"

	msg "Step 3: adding DOI URLs as links to\n        \"$d/$frel\""


	(
		cat "$frel" | perl -pe 's@</Relationships>@@g'
		cat "$fdoc" \
			| egrep -o '10.\d{4,9}/[-._;()/:a-zA-Z0-9]+' \
			| tr -cd 'A-Za-z0-9' \
			| perl -pe 's@^(.*)$@
					<Relationship Id="rId$1"
						Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink"
						Target="http://www.doi.org/$1" TargetMode="External"/>@g'
		 echo '</Relationships>'
	) > "$frel.tmp"
	mv "$frel.tmp" "$frel"



	msg "Step 4: switching DOIs to hyperlinks\n        \"$d/$fdoc\""

	cat "$fdoc" \
		| perl -pe 's@(10.\d{4,9}/[-._;()/:a-zA-Z0-9]+)@
		<w:hyperlink r:id="
		rId=====\1=====
		" w:history="1">
	    <w:r>
        <w:rPr>
            <w:rStyle w:val="Hyperlink"/>
        </w:rPr>
        <w:t>\1</w:t>
    </w:r>
	</w:hyperlink>@g' \
		| perl -ne 'print if not /====/; tr/a-z/A-Z/ if /====/' \
		> "$fdoc.tmp"
	mv "$fdoc.tmp" "$fdoc"

		#| perl -ne 'print if not /====/; tr/a-zA-Z0-9// if /=====/' \
		#| perl -ne 'print if not /====/; tr/a-z/A-Z/ if /=====/' \
		#| perl -pe 's/(rId=====.*=====)/$1 =~ tr/A-Za-z0-9//ce' \
		#| perl -pe 's/(rId=====.*=====)/haha/; print "aaa $1 bbbb"' \
		#| perl -pe 's/(rId=====.*=====)/$1 =~ tr -cd "A-Za-z0-9" /r/e' \

	msg "Step 5: re-zipping the content of\n        \"$d/a\"\n        into \"$y\""
	(
		cd a
		zip ../b.docx $(find .)
	)
)


cp "$d/b.docx" "$y"

msg Finished ðŸŽ‰
