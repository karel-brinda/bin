#! /usr/bin/env bash

#set -o verbose
#set -o xtrace

readonly PROGDIR=$(dirname $0)

if [[ `uname` == 'Linux' ]]; then
	#INSTALL="brew install --force-bottle"
	#INSTALL() {
		#brew install $@
	#}
	f="$PROGDIR/tmp.linuxbrew"
	finished="_"
	INSTALL() {
		for x in "$@"; do
			>&2 echo "=== Checking $x"
			if grep "_${x}_" <<< "$finished"; then
				>&2 echo "---- Skipping $x (_${x}_ is in $finished)"
				true
			else
				>&2 echo "---- Installing $x"
				finished="${finished}${x}_"
				>&2 echo "....... processed list: $finished"
				>&2 echo "....... running: brew deps $x"
				y=$(brew deps "$x")
				for z in $y; do
					INSTALL $z
				done
				brew install --force-bottle "$@"
			fi
		done
	}
else
	#INSTALL="brew install"
	INSTALL() {
		>&2 echo "Going to install $@"
		brew install "$@"
	}
fi

export -f INSTALL


######
## GIT
######
INSTALL git


###################
## BASIC UNIX TOOLS
###################
INSTALL wget gnu-time coreutils
INSTALL pv fd cmake rename ascii parallel
INSTALL rename ag wtfutil git-sizer
INSTALL bat ccat
INSTALL autoconf automake
INSTALL tmux screen htop

# misc tools from @sharkdp
#INSTALL insect hexyl
#
#INSTALL tree
#INSTALL iotop
#INSTALL links
#INSTALL lynx
#INSTALL mc
#INSTALL ranger


#########
# EDITORS
#########
#/usr/local/bin/pip2 install neovim --upgrade --user
#/usr/local/bin/pip3 install neovim --upgrade --user
#INSTALL neovim/neovim/neovim
INSTALL neovim


#######################
# COMPILERS & LIBRARIES
#######################
INSTALL rust go ruby npm
INSTALL clang-format yapf
INSTALL boost libstxxl open-mpi

# other unix utilities
if [[ `uname` == 'Linux' ]]; then
#	INSTALL bash
	echo ""
else
	INSTALL gcc
	#INSTALL gcc@5
fi


###############################
# TOOLS FOR DOCUMENT CONVERSION
###############################
INSTALL ghostscript pandoc pandoc-citeproc
INSTALL imagemagick qpdf ffmpeg exiftool briss
INSTALL pdfgrep svg2pdf pdf2svg
INSTALL diff-pdf #latexdiff git-latexdiff

